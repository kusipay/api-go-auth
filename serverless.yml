service: api-go-auth

frameworkVersion: "3"

provider:
  name: aws
  runtime: provided.al2
  architecture: arm64
  region: ${env:AWS_REGION}
  stage: ${env:STAGE}
  httpApi:
    cors: true
    name: ${self:service}-${self:provider.stage}-api

package:
  individually: true

custom:
  version: "v1"
  sld: ${env:SECOND_LEVEL_DOMAIN}
  tld: ${env:TOP_LEVEL_DOMAIN}
  prefix: ${self:service}-${self:provider.stage}

resources:
  Conditions:
    IsProd: !Equals ["${self:provider.stage}", "prod"]

  Resources:
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:custom.prefix}-userpool
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email ## admin_only | verified_email | verified_phone_number
              Priority: 1
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
        DeletionProtection: ACTIVE
        MfaConfiguration: "OFF"
        UsernameConfiguration:
          CaseSensitive: false
        AliasAttributes: ## phone_number | email | preferred_username
          - preferred_username
          - email
          - phone_number
        AutoVerifiedAttributes: ## phone_number | email
          - email
        UserAttributeUpdateSettings:
          AttributesRequireVerificationBeforeUpdate:
            - email

    UserPoolClientPublic:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        UserPoolId: !Ref UserPool # Reference to your UserPool
        ClientName: ${self:custom.prefix}-publicclient
        GenerateSecret: false
        PreventUserExistenceErrors: ENABLED
        EnableTokenRevocation: true
        AllowedOAuthFlowsUserPoolClient: true
        SupportedIdentityProviders:
          - COGNITO
        ExplicitAuthFlows:
          - ALLOW_REFRESH_TOKEN_AUTH
          - ALLOW_USER_SRP_AUTH
        AllowedOAuthFlows:
          - code
        AllowedOAuthScopes:
          - openid
          - email
          - profile
          - phone
        CallbackURLs:
          - "https://jwt.ms" # Replace with your actual callback URL

    UserPoolDomainCognito:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        Domain: "${self:custom.prefix}-1693728259"
        UserPoolId: !Ref UserPool

    UserPoolDomainCustom:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        CustomDomainConfig:
          CertificateArn:
            Fn::ImportValue: "${self:custom.sld}-${self:custom.tld}-acmcertificatearn"
        Domain:
          !If [
            IsProd,
            "auth.${self:custom.sld}.${self:custom.tld}",
            "auth-${self:provider.stage}.${self:custom.sld}.${self:custom.tld}",
          ]
        UserPoolId: !Ref UserPool

    RecordSetGroupUserPoolDomainCustom:
      Type: AWS::Route53::RecordSetGroup
      Properties:
        Comment: "${self:custom.prefix} UserPoolDomain RecordSetGroup"
        HostedZoneId:
          Fn::ImportValue: "${self:custom.sld}-${self:custom.tld}-hostedzoneid"
        RecordSets:
          - Name: !Ref UserPoolDomainCustom
            Type: A
            AliasTarget:
              DNSName: !GetAtt UserPoolDomainCustom.CloudFrontDistribution
              HostedZoneId: Z2FDTNDATAQYW2

  Outputs:
    UserPoolDomain:
      Description: domain1
      Value: !Ref UserPoolDomainCustom
      Export:
        Name: !Sub "${self:custom.prefix}-UserPoolDomainA"

    UserPoolDomain:
      Description: domain2
      Value: !GetAtt UserPoolDomainCustom.CloudFrontDistribution
      Export:
        Name: !Sub "${self:custom.prefix}-UserPoolDomainB"