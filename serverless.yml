service: api-go-auth

frameworkVersion: "3"

provider:
  name: aws
  runtime: provided.al2
  architecture: arm64
  region: ${env:AWS_REGION}
  stage: ${env:STAGE}
  httpApi:
    cors: true
    name: ${self:service}-${self:provider.stage}-api

package:
  individually: true

custom:
  version: "v1"
  prefix: ${self:service}-${self:provider.stage}

resources:
  Resources:
    UserPoolXXX:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:custom.prefix}-xxx
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email ## admin_only | verified_email | verified_phone_number
              Priority: 1
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
        DeletionProtection: INACTIVE
        MfaConfiguration: "OFF"
        UsernameConfiguration:
          CaseSensitive: false
        AutoVerifiedAttributes: ## phone_number | email
          - email
        UserAttributeUpdateSettings:
          AttributesRequireVerificationBeforeUpdate:
            - email

    UserPoolClientXXX:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        UserPoolId: !Ref UserPoolXXX # Reference to your UserPool
        ClientName: xxxxxx
        GenerateSecret: false
        SupportedIdentityProviders:
          - COGNITO
        PreventUserExistenceErrors: ENABLED
        ExplicitAuthFlows:
          - ALLOW_REFRESH_TOKEN_AUTH
          - ALLOW_USER_PASSWORD_AUTH
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthFlows:
          - code
          - implicit
        AllowedOAuthScopes:
          - email
          - openid
        CallbackURLs:
          - "https://jwt.ms" # Replace with your actual callback URL

    UserPoolDomainXXX:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        Domain: "uniquedomainxxxxxx" # Choose a unique domain prefix
        UserPoolId: !Ref UserPoolXXX

    UserPoolYYY:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:custom.prefix}-yyy
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email ## admin_only | verified_email | verified_phone_number
              Priority: 1
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
        DeletionProtection: INACTIVE
        MfaConfiguration: "OFF"
        UsernameConfiguration:
          CaseSensitive: false
        AliasAttributes: ## phone_number | email | preferred_username
          - email
        AutoVerifiedAttributes: ## phone_number | email
          - email
        UserAttributeUpdateSettings:
          AttributesRequireVerificationBeforeUpdate:
            - email

    UserPoolClientYYY:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        UserPoolId: !Ref UserPoolYYY # Reference to your UserPool
        ClientName: yyyyyy
        GenerateSecret: false
        SupportedIdentityProviders:
          - COGNITO
        PreventUserExistenceErrors: ENABLED
        ExplicitAuthFlows:
          - ALLOW_REFRESH_TOKEN_AUTH
          - ALLOW_USER_PASSWORD_AUTH
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthFlows:
          - code
          - implicit
        AllowedOAuthScopes:
          - email
          - openid
        CallbackURLs:
          - "https://jwt.ms" # Replace with your actual callback URL

    UserPoolDomainYYY:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        Domain: "uniquedomainyyyyyy" # Choose a unique domain prefix
        UserPoolId: !Ref UserPoolYYY

    UserPoolZZZ:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:custom.prefix}-zzz
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email ## admin_only | verified_email | verified_phone_number
              Priority: 1
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
        DeletionProtection: INACTIVE
        MfaConfiguration: "OFF"
        UsernameConfiguration:
          CaseSensitive: false
        UsernameAttributes: ## phone_number | email
          - email
        AutoVerifiedAttributes: ## phone_number | email
          - email
        UserAttributeUpdateSettings:
          AttributesRequireVerificationBeforeUpdate:
            - email

    UserPoolClientZZZ:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        UserPoolId: !Ref UserPoolZZZ # Reference to your UserPool
        ClientName: zzzzzz
        GenerateSecret: false
        SupportedIdentityProviders:
          - COGNITO
        PreventUserExistenceErrors: ENABLED
        ExplicitAuthFlows:
          - ALLOW_REFRESH_TOKEN_AUTH
          - ALLOW_USER_PASSWORD_AUTH
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthFlows:
          - code
          - implicit
        AllowedOAuthScopes:
          - email
          - openid
        CallbackURLs:
          - "https://jwt.ms" # Replace with your actual callback URL

    UserPoolDomainZZZ:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        Domain: "uniquedomainzzzzzz" # Choose a unique domain prefix
        UserPoolId: !Ref UserPoolZZZ

  Outputs:
    UserPoolId:
      Description: "User Pool Id"
      Value: !Ref UserPoolZZZ
      Export:
        Name: ${self:custom.prefix}-userpoolid
    UserPoolArn:
      Description: "User Pool ARN"
      Value: !GetAtt UserPoolZZZ.Arn
      Export:
        Name: ${self:custom.prefix}-userpoolarn
    UserPoolProviderName:
      Description: "User Pool Provider Name"
      Value: !GetAtt UserPoolZZZ.ProviderName
      Export:
        Name: ${self:custom.prefix}-userpoolprovidername
    UserPoolProviderURL:
      Description: "User Pool Provider URL"
      Value: !GetAtt UserPoolZZZ.ProviderURL
      Export:
        Name: ${self:custom.prefix}-userpoolproviderurl
